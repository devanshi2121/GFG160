Brute Force- Using Two Nested Loops
class Solution {
    // Function to find the first non-repeating character in a string.
    static char nonRepeatingChar(String s) {
        // Your code here
       int n = s.length();
        for (int i = 0; i < n; ++i) {
            boolean found = false;
            for (int j = 0; j < n; ++j) {
                if (i != j && s.charAt(i) == s.charAt(j)) {
                    found = true;
                    break;
                }
            }
            if (found == false) 
                return s.charAt(i);
        }
        return '$';
    }
}

Better Approach-
Time Complexity: O(n), where n is the length of input string s.
Auxiliary Space: O(26)~O(1)
class Solution {
    // Function to find the first non-repeating character in a string.
    static char nonRepeatingChar(String s) {
        // Your code here
        int[] freq = new int[26];
        for (char c : s.toCharArray()) 
            freq[c - 'a']++;
        for (int i = 0; i < s.length(); ++i) {
            if (freq[s.charAt(i) - 'a'] == 1)
                return s.charAt(i);
        }
        return '$';
    }
}
